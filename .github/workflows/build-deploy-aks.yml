name: Build & Deploy AKS

on: 
  workflow_dispatch:
  push: 
    branches: [ master ]
  pull_request:
    branches: [ master ]

# Note. Required secrets: DOCKER_PASSWORD, ACR_PASSWORD & KUBE_CONFIG

env:
  DOCKER_USER: bencuk
  ACR_NAME: bcdemo
  IMAGE_NAME: java-demoapp
  INGRESS_DNS_HOST: java-demoapp.kube.benco.io

jobs:
  buildJob:
    name: Build and ACR Push
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
      
    - name: Build the Docker image
      run: docker build . --file ./Dockerfile --tag $DOCKER_USER/$IMAGE_NAME:latest --tag $ACR_NAME.azurecr.io/apps/$IMAGE_NAME:${{ github.run_id }} --tag $ACR_NAME.azurecr.io/apps/$IMAGE_NAME:latest
    
    - name: Dockerhub Login
      uses: Azure/docker-login@v1
      with:
        username: ${{ env.DOCKER_USER }}
        password: ${{ secrets.DOCKER_PASSWORD }} 

    - name: Push to Dockerhub
      run: docker push $DOCKER_USER/$IMAGE_NAME
      
    - name: ACR Login
      uses: Azure/docker-login@v1
      with:
        login-server: ${{ env.ACR_NAME }}.azurecr.io
        username: ${{ env.ACR_NAME }}
        password: ${{ secrets.ACR_PASSWORD }}   
            
    - name: Push to ACR
      run: docker push $ACR_NAME.azurecr.io/apps/$IMAGE_NAME

# ================================================================

  releaseJob:
    name: Deploy to AKS with Helm
    needs: buildJob
    env:
      KUBECONFIG_FILE: '${{ secrets.KUBE_CONFIG }}'

    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v1

    - name: ACR Login
      uses: Azure/docker-login@v1
      with:
        login-server: ${{ env.ACR_NAME }}.azurecr.io
        username: ${{ env.ACR_NAME }}
        password: ${{ secrets.ACR_PASSWORD }}  

    - name: Helm install web app
      uses: deliverybot/helm@v1
      with:
        helm: helm3
        release: java
        namespace: demoapps
        chart: https://code.benco.io/helm-charts/webapp-1.2.0.tgz
        value-files: ./kubernetes/app.yaml
        values: |
          image:
            tag: '${{ github.run_id }}'
            repository: ${{ env.ACR_NAME }}.azurecr.io/apps/${{ env.IMAGE_NAME }}
          ingress:
            host: ${{ env.INGRESS_DNS_HOST }}
